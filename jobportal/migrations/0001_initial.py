# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-20 18:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('UserID', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('First_Name', models.CharField(max_length=20)),
                ('Last_Name', models.CharField(max_length=20)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('EducationID', models.AutoField(primary_key=True, serialize=False)),
                ('School_Name', models.CharField(max_length=70)),
                ('Education_Attained', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='JobOpportunity',
            fields=[
                ('JobID', models.AutoField(primary_key=True, serialize=False)),
                ('Job_Post', models.CharField(max_length=50)),
                ('Required_Applicants', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Job Opportunity',
                'verbose_name_plural': 'Job Opportunities',
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('RequirementID', models.AutoField(primary_key=True, serialize=False)),
                ('SSS', models.FileField(upload_to='')),
                ('Phil_Health', models.FileField(upload_to='')),
                ('TIN', models.FileField(upload_to='')),
                ('NBI_Clearance', models.FileField(upload_to='')),
                ('Marriage_Contract', models.FileField(upload_to='')),
                ('TOR', models.FileField(upload_to='')),
                ('Picture', models.FileField(upload_to='')),
                ('Employee_Certificate', models.FileField(upload_to='')),
                ('Clearance_To_Transfer', models.FileField(upload_to='')),
                ('Clearance_From_SSS', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='SkillMatching',
            fields=[
                ('SMID', models.AutoField(primary_key=True, serialize=False)),
                ('Job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobportal.JobOpportunity')),
            ],
        ),
        migrations.CreateModel(
            name='Specialized',
            fields=[
                ('SpecSkillsID', models.AutoField(primary_key=True, serialize=False)),
                ('Specialization', models.CharField(max_length=50)),
                ('SubSkill', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Specialization',
                'verbose_name_plural': 'Specializations',
            },
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('ApplicantID', models.AutoField(primary_key=True, serialize=False)),
                ('NickName', models.CharField(max_length=50)),
                ('Birth_Date', models.DateField()),
                ('Birth_Place', models.CharField(max_length=100)),
                ('Gender', models.CharField(max_length=10)),
                ('Civil_Status', models.CharField(max_length=20)),
                ('Picture', models.FileField(upload_to='')),
                ('Status', models.CharField(default='Applying', max_length=50)),
                ('Bldg_No', models.CharField(max_length=50)),
                ('Street', models.CharField(max_length=50)),
                ('Municipality', models.CharField(max_length=50)),
                ('City', models.CharField(max_length=50)),
                ('Country', models.CharField(max_length=50)),
                ('Phone', models.CharField(max_length=15)),
                ('Mobile', models.CharField(max_length=11)),
            ],
            options={
                'abstract': False,
            },
            bases=('jobportal.customuser',),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('ClientID', models.AutoField(primary_key=True, serialize=False)),
                ('Company_Name', models.CharField(max_length=20)),
                ('Logo', models.FileField(upload_to='')),
                ('Bldg_No', models.CharField(max_length=50)),
                ('Street', models.CharField(max_length=50)),
                ('Municipality', models.CharField(max_length=50)),
                ('City', models.CharField(max_length=50)),
                ('Country', models.CharField(max_length=50)),
                ('Phone', models.CharField(max_length=15)),
                ('Mobile', models.CharField(max_length=11)),
                ('Website', models.URLField()),
            ],
            options={
                'abstract': False,
            },
            bases=('jobportal.customuser',),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('EmployeeID', models.AutoField(primary_key=True, serialize=False)),
                ('Employee_No', models.CharField(max_length=15)),
                ('Civil_Status', models.CharField(max_length=20)),
                ('Phone', models.CharField(max_length=15)),
                ('Mobile', models.CharField(max_length=11)),
                ('Bldg_No', models.CharField(max_length=50)),
                ('Street', models.CharField(max_length=50)),
                ('Municipality', models.CharField(max_length=50)),
                ('City', models.CharField(max_length=50)),
                ('Country', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
            bases=('jobportal.customuser',),
        ),
        migrations.AddField(
            model_name='skillmatching',
            name='SpecSkill',
            field=models.ManyToManyField(to='jobportal.Specialized'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='specialized',
            name='User',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jobportal.Applicant'),
        ),
        migrations.AddField(
            model_name='requirement',
            name='User',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jobportal.Applicant'),
        ),
        migrations.AddField(
            model_name='jobopportunity',
            name='Client_Name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobportal.Client'),
        ),
        migrations.AddField(
            model_name='education',
            name='User',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jobportal.Applicant'),
        ),
    ]
